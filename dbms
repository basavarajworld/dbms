 PL Sql--
Q1.>

Begin 
      update employee
      set salary = salary +(0.15*salary);
      where dno=2;
      dbms_output.put_line('Number of employess awarded hike are : ' || sql%rowcount);
end;
/




Q2.>//employee mabye supply
sql> create table shipment as(select * from supply where 1=2);
sql>edit copy.sql
Declare 
       cursor c1 is select * from supply;
       v_rec   supply%rowtype;
Begin 
      open c1;
        loop
        fetch c1 into v_rec;
        exit when c1%notfound;
        insert into shipment values(v_rec.pid,v_red.sid,v_rec.quantity);
        where v_rec.pid in (31,31,33,24);
        end loop;
        close c1;
end;
/


q3>
Declare
  n number:=&n;
  j number:=2;
  cnt number:=0;
Begin 
    while(j<=n/2) 
      loop
         if (mod(n,j)=0) then
            dbms_output.put_line(n || 'is not a prime number');
            cnt:=1;
            exit;
         else
            j:=j+1;
            end if;
      end loop;
         if cnt=0 then
             dbms_output.put_line(n || 'is  a prime number');
         end if;
end;
/
q4>
Declare
  cursor c1 is select * from branch;
  v_rec branch%rowtype;
Begin
  open c1;
  loop
  fetch c1 into v_rec;
  exit when c1%notfound;
  insert into branch values(v_rec.BID,v_rec.BNAME);
  end loop;
  close c1;
end;
 /

Q5>
Declare
 a number:=0;
 b number:=1;
 c number:=0;
 cnt number:=2;
procedure fibonacci is
Begin 
    while(cnt<8)
        loop
        c:=a+b;
        dbms_output.put_line(c);
        a:=b;
        b:=c;
        cnt:=cnt+1;
        end loop;

end;
Begin
   dbms_output.put_line(a);
   dbms_output.put_line(b);
   fibonacci;
end;
/


DBMS------------------

Q1>
-CREATE TABLE employee
--(
--	SSN varchar(10) PRIMARY KEY,
--	Name varchar(40) not null,
--	DeptNo int(5) not null
--);

CREATE TABLE emp(
    ssn int PRIMARY KEY,
    name varchar(10) not null,
    dno int not null
);
CREATE TABLE proj(

    pid int PRIMARY KEY,
    projArea varchar(10),
    pname varchar(10)
 );
 
 CREATE TABLE dept(
 dnum int PRIMARY KEY,
 dname varchar(10)
 );
-- FOREIGN KEY (SSN) REFERENCES employee(SSN) ON DELETE CASCADE,
 CREATE TABLE works_on(
    ssn int not null,
    pid int not null,
    hrs int,
    FOREIGN KEY (ssn) REFERENCES emp(ssn) ON DELETE CASCADE,
    FOREIGN KEY (pid) REFERENCES proj(pid) ON DELETE CASCADE
 );
 
INSERT INTO EMP(SSN,NAME,DNO) VALUES (1,'JOY',4);
INSERT INTO EMP(SSN,NAME,DNO) VALUES (2,'MARRIE',2);
INSERT INTO EMP(SSN,NAME,DNO) VALUES (3,'MFGE',3);
INSERT INTO EMP(SSN,NAME,DNO) VALUES (4,'CHANDLER',4);
INSERT INTO EMP(SSN,NAME,DNO) VALUES (5,'JOHN',3);
INSERT INTO EMP(SSN,NAME,DNO) VALUES (6,'CARRY',2);
INSERT INTO EMP(SSN,NAME,DNO) VALUES (7,'MORIE',1);
INSERT INTO EMP(SSN,NAME,DNO) VALUES (8,'MICHAL',1);

SELECT * 
FROM EMP;

INSERT INTO PROJ(PID,PROJAREA,PNAME) VALUES(1,'DATABASE','a');
INSERT INTO PROJ(PID,PROJAREA,PNAME) VALUES(2,'DATABASE','b');
INSERT INTO PROJ(PID,PROJAREA,PNAME) VALUES(3,'BIGDATA','c');
INSERT INTO PROJ(PID,PROJAREA,PNAME) VALUES(4,'CLOUD','d');
INSERT INTO PROJ(PID,PROJAREA,PNAME) VALUES(5,'SEARCH','e');
INSERT INTO PROJ(PID,PROJAREA,PNAME) VALUES(6,'CLOUD','f');
INSERT INTO PROJ(PID,PROJAREA,PNAME) VALUES(7,'BIGDATA','h');
INSERT INTO PROJ(PID,PROJAREA,PNAME) VALUES(8,'CLOUD','i');

SELECT * 
FROM PROJ;

INSERT INTO DEPT(DNUM,DNAME) VALUES(1,'A');
INSERT INTO DEPT(DNUM,DNAME) VALUES(2,'B');
INSERT INTO DEPT(DNUM,DNAME) VALUES(3,'C');
INSERT INTO DEPT(DNUM,DNAME) VALUES(4,'D');

SELECT * 
FROM DEPT;

INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(1,1,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(1,2,2);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(1,5,5); 
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(2,3,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(2,8,8);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(3,5,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(3,4,4);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(3,6,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(4,7,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(4,2,1);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(5,5,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(5,6,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(6,1,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(7,4,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(8,4,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(8,3,5);
INSERT INTO WORKS_ON(SSN,PID,HRS) VALUES(3,2,1);

SELECT * FROM WORKS_ON;


SELECT *
FROM EMP e
WHERE e.SSN IN
(
SELECT w.SSN 
FROM WORKS_ON w
WHERE w.PID IN
(
SELECT p.PID 
FROM PROJ p
WHERE p.PROJAREA = 'DATABASE')
);

SELECT DNO,COUNT(SSN)
FROM EMP 
GROUP BY DNO;

UPDATE WORKS_ON
SET PID = 5
WHERE SSN = 2;
 
SELECT * FROM WORKS_ON ;
 



SELECT E.SSN,E.NAME
FROM EMP E
WHERE E.SSN NOT IN 
(
SELECT W.SSN
FROM WORKS_ON W 
group by W.SSN
HAVING COUNT(W.PID) > 2
);


Q2>
CREATE TABLE PART(
PID INT PRIMARY KEY,
PNAME VARCHAR(10),
PCOLOR VARCHAR(10)
);

CREATE TABLE SUPPLIER(
SID INT PRIMARY KEY,
SNAME VARCHAR(10),
SADDR VARCHAR(10)
);

CREATE TABLE SUPPLY(
SID INT NOT NULL,
PID INT NOT NULL,
QTY INT,
FOREIGN KEY (SID) REFERENCES SUPPLIER(SID) ON DELETE CASCADE,
FOREIGN KEY (PID) REFERENCES PART(PID) ON DELETE CASCADE,
PRIMARY KEY(SID,PID)

);

INSERT INTO PART(PID,PNAME,PCOLOR) VALUES(1,'BOLTS','RED');
INSERT INTO PART(PID,PNAME,PCOLOR) VALUES(2,'NUTS','RED');
INSERT INTO PART(PID,PNAME,PCOLOR) VALUES(3,'PLUGS','RED');
INSERT INTO PART(PID,PNAME,PCOLOR) VALUES(4,'BOTS','BLUE');
INSERT INTO PART(PID,PNAME,PCOLOR) VALUES(5,'SCREW','BLUE');
INSERT INTO PART(PID,PNAME,PCOLOR) VALUES(6,'DRIVER','SILVER');

INSERT INTO SUPPLIER(SID,SNAME,SADDR) VALUES(1,'ARAV','XX');
INSERT INTO SUPPLIER(SID,SNAME,SADDR) VALUES(2,'JOSHI','YX');
INSERT INTO SUPPLIER(SID,SNAME,SADDR) VALUES(3,'GARRY','YT');
INSERT INTO SUPPLIER(SID,SNAME,SADDR) VALUES(4,'DRUV','PX');
INSERT INTO SUPPLIER(SID,SNAME,SADDR) VALUES(5,'SHARMA','YY');
INSERT INTO SUPPLIER(SID,SNAME,SADDR) VALUES(6,'SINGH','LK');



INSERT INTO SUPPLY(PID,SID,QTY) VALUES(1,1,5);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(2,2,2);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(1,2,5);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(3,3,5);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(4,3,5);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(4,5,1);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(5,4,9);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(5,6,8);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(6,6,2);
INSERT INTO SUPPLY(PID,SID,QTY) VALUES(6,5,6);


SELECT * FROM PART;

SELECT* FROM SUPPLIER;

SELECT* FROM SUPPLY;


SELECT *
FROM PART P
WHERE P.PID IN
(
SELECT S.PID
FROM SUPPLY S
WHERE S.SID IN
(
SELECT SP.SID 
FROM SUPPLIER SP
WHERE SP.SNAME = 'ARAV'
)
);


SELECT SP.SNAME
FROM SUPPLIER SP
WHERE SP.SID IN
(
 SELECT S.SID 
 FROM SUPPLY S
 WHERE S.PID IN
 (
 SELECT P.PID
 FROM PART P
 WHERE P.PNAME = 'DRIVER'
 )
 );

DELETE 
FROM PART
WHERE PCOLOR = 'SILVER';

SELECT * FROM PART;

SELECT *
FROM SUPPLIER SP
WHERE SP.SID IN
(
   SELECT S.SID
   FROM SUPPLY S
   GROUP BY S.SID
   HAVING COUNT(S.PID) = 2
);

q3>
create table boat(
  bid int primary key,
  bcolor char(10),
  bname char(10));


insert all 
into boat values(1,'blue','A')
into boat values(2,'blue','B')
into boat values(3,'red','C')
into boat values(4,'green','d')
select * from dual;

create table sailor(
  sid int primary key,
  name char(50),
  age int );

insert all 
into sailor values(1,'A',1)
into sailor values(2,'B',2)
into sailor values(3,'C',3)
into sailor values(4,'D',4)
into sailor values(5,'E',5)
selet * from  dual;

create table reserves(
  sid int references sailor(sid) on delete cascade,
  bid int references boat(bid) on delete cascade);


insert all 
into reserves values(1,1)
into reserves values(2,1)
into reserves values(3,1)
into reserves values(4,1)
into reserves values(5,1)
into reserves values(5,2)
into reserves values(5,4)
into reserves values(4,4)
select * from dual;

i>select boat.bid ,bname,bcolor from boat,sailor,reserves where boat.bid=reserves.bid and reserves.sid=sailor.sid and sailor.name='A';
ii>select * from boat where not exits (selec sid from sailor minus select sid from reserves where boat.bid=reserves.bid);
iii>select sailor.name,count(reserves.bid) from reserves,sailor
where reserves.sid=sailor.sid group by name;
iv>select  boat.bid ,bname,bcolor from boat,sailor where boat.bname=sailor.name;

Q4>

 create table customer(
   cid number(5) primary key,
    cname varchar2(10),
    address varchar2(10),
    phno number(10));


 create table branch(
    bid number(5) primary key,
    bname varchar2(10),
    bcity varchar2(10));



 create table account(
    anum number(10) primary key,
    cid number(5) references customer(cid) on delete cascade,
    bid number(5) references branch(bid) on delete cascade,
    atype varchar2(10),
    astatus varchar2(10),
    balance number(10));



 create table transaction(
    cid number(5) references customer(cid) on delete cascade,
    anum number(10) references account(anum) on delete cascade,
    type varchar2(10),
    amount number(10));
    
   insert all
    into customer values(1,'abhi','muz',7903988)
    into customer values(2,'ram','bombay',9525559)
    into customer values(3,'monty','chennai',83404041)
    into customer values(4,'mona','delhi',9967432)
    into customer values(5,'fruty','haryana',87345809)
    into customer values(6,'singh','indore',6794321)
    into customer values(7,'rahul','patna',9756321)
    into customer values(8,'shiva','pune',7654309)
   into customer values(9,'pari','ranchi',88650426)
   select * from dual; 
   
   
   select * from customer;
   
   
    insert all
    into branch values(10,'karol bagh','delhi')
    into branch values(20,'daryaganj','delhi')
    into branch values(30,'patelnagar','delhi')
    into branch values(40,'bhagwanpur','muz')
    into branch values(50,'juhu','bombay')
    into branch values(60,'kankarbagh','patna')
    into branch values(70,'thane','bombay')
    select * from dual;
   
   
    select * from account;
   
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(11,1,10,'S','O',6532);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(22,2,10,'C','O',65325);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(33,3,20,'S','O',2552);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(44,4,30,'S','O',15532);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(55,5,40,'C','O',8632);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(66,6,50,'C','O',6572);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(77,7,60,'S','O',4562);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(88,8,70,'S','O',78452);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(99,9,50,'C','O',1562);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(111,5,20,'C','O',78712);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(222,1,20,'C','O',78712);
   INSERT INTO ACCOUNT(ANUM,CID,BID,ATYPE,ASTATUS,BALANCE) VALUES(333,1,10,'C','O',78712);
   
   
   
   
   SELECT * FROM ACCOUNT;
   
    insert all
    into transaction values(1,11,'d',200)
    into transaction values(1,11,'w',100)
    into transaction values(3,33,'d',100)
    into transaction values(4,44,'d',500)
    into transaction values(5,55,'d',700)
    into transaction values(4,44,'w',300)
    into transaction values(5,55,'w',200)
   into transaction values(6,66,'d',100)
   into transaction values(7,77,'d',800)
   into transaction values(7,77,'w',100)
   into transaction values(3,33,'w',900)
   select * from dual;
   
   SELECT * FROM TRANSACTION;
   
   insert all
    into transaction values(9,99,'d',500)
    into transaction values(5,111,'w',100)
    into transaction values(8,88,'w',900)
   select * from dual;
   
   
    
--   1
    
   SELECT *
   FROM CUSTOMER C
   WHERE C.CID IN
   (
   SELECT A.CID
   FROM ACCOUNT A
   WHERE A.ATYPE = 'S'
   
   INTERSECT 
   
   SELECT X.CID
   FROM ACCOUNT X
   WHERE X.ATYPE = 'C'
   );
   
   
--  2
   
    
  SELECT B.BID,B.BNAME,COUNT(A.CID) NO_OF_ACCOUNT
  FROM BRANCH B,ACCOUNT A 
  WHERE B.BID = A.BID
  GROUP BY B.BID,B.BNAME;
  
  
--  3

SELECT *
FROM CUSTOMER C
WHERE C.CID IN
(
SELECT T.CID
FROM TRANSACTION T
GROUP BY T.CID
HAVING COUNT(T.CID) >= 3
);

SELECT T.CID,COUNT(*)
FROM TRANSACTION T
GROUP BY T.CID;
    
    
SELECT * FROM TRANSACTION ;  


--4



SELECT *
FROM BRANCH B
WHERE B.BID IN
(
  SELECT A.BID
  FROM ACCOUNT A
  GROUP BY A.BID 
  HAVING COUNT(A.CID) <
  (
  
    (SELECT COUNT(*)
    FROM ACCOUNT K
    )
    /
    (SELECT COUNT(*)
    FROM BRANCH X
    )
    )
    );
    
  
  

Q5>
 create table books(
    isbn number(5) primary key,
    title varchar2(15),
    author varchar2(15),
    publisher varchar2(15));
    
     create table student(
   usn number(5) primary key,
    name varchar2(10));
    
     create table borrows(
    
    isbn number(5) references books(isbn) on delete cascade,
    usn number(5) references student(usn) on delete cascade
    );
    
    
  insert all
    into books values(1,'database','benjamin','xyz')
    into books values(2,'datasecurity','orelly','abc')
    into books values(3,'java','harry','pqr')
    into books values(4,'c++','sierra','def')
    into books values(5,'deep_learning','kelvin','xyz')
    select * from dual;
    
 insert all
    into student values(10,'abhi')
    into student values(20,'ram')
    into student values(30,'priya')
    into student values(40,'monu')
    into student values(50,'yuvi')
    select * from dual;
    
    
   insert all
    into borrows values(1,10)
    into borrows values(1,30)
    into borrows values(2,40)
    into borrows values(3,10)
    into borrows values(3,50)
    into borrows values(2,30)
    into borrows values(2,20)
    into borrows values(4,30)
   into borrows values(5,50)
   into borrows values(4,40)
   select * from dual;
    
    
    
    --1
    SELECT S.NAME
    FROM STUDENT S
    WHERE S.USN IN
    (
    SELECT B.USN
    FROM BORROWS B
    WHERE B.ISBN = 1 OR B.ISBN = 2
    );
    
    SELECT * FROM BORROWS;
    
   --2
 
    select *
    from student s
    where s.usn in
    (
    select b.usn 
    from borrows b
    where b.isbn in
    (
    select bk.isbn
    from books bk
    where bk.title = 'database'
    )
    );
    
    --3
    select b.usn,s.name,count(b.isbn)
    from student s,borrows b
    where s.usn =b.usn
    group by b.usn,s.name;
    
    INSERT INTO BOOKS(ISBN,TITLE,AUTHOR,PUBLISHER) VALUES(6,'DATA_MINING','VGH','BJHJ');
    
    
    SELECT *
   FROM BOOKS BK 
   WHERE BK.TITLE LIKE 'DA%' AND BK.ISBN NOT IN 
   (
   SELECT B.ISBN
   FROM BORROWS B
   );
    
Mongo db--
<1>
createCollection("employee")
db.employee.insertMany([
{ssn:4567, name:"jack",deptno:"xyz",pno:101},
{ssn:3256, name:"chris",deptno:"abc",pno:102},
{ssn:7894, name:"dwane",deptno:"def",pno:103},
{ssn:5567, name:"trump",deptno:"def",pno:104}
1>
db.employee.find({deptno : "def"}).pretty()
2>
db.employee.find({pno:101}).pretty()




<2>
createCollection("warehouse")
db.warehouse.insertMany([
{pno:1947, pname:"bolts",color:"black",sno: 1234,sname:"abc",address:"blore"},
{pno:1950, pname:"chain",color:"blue",sno: 1034,sname:"adc",address:"blre"},
{pno:1950, pname:"chain",color:"red",sno: 1274,sname:"aec",address:"blor"},
{pno:1919, pname:"wheel",color:"black",sno: 8234,sname:"atc",address:"lore"},


1>
db.warehouse.update({pno : 1947},{$set:{pno:200}},multi:true})
db.warehouse.find().pretty()

2>
db.warehouse.find({pno:1919}).pretty()



<3>
createCollection("boatres")
db.boaters.insertMany([
{bid:9988, bname:"abc",color:black,sname:"joh",sid:1234,day:2022-12-25},
{bid:8877, bname:"def",color:black,sname:"smith",sid:4567,day:2022-11-24},
{bid:7766, bname:"ghi",color:blue,sname:"stan",sid:1122,day:2022-10-24},
{bid:6655, bname:"pqr",color:blue,sname:"serals",sid:1122,day:2022-10-29}
])
1>
db.boaters.find({sname : "joh"}).count()
2>
db.boaters.find({color:"blue"}).pretty()



    

<4>
createCollection("bank")
db.bank.insertMany([
{custid:9988, custname:"rajan", accid:1301,acctype:"saving",balance:12000,branchno:03, bankname:"abc"},
{custid:3146, custname:"chris", accid:1302,acctype:"saving",balance:30000,branchno:04, bankname:"def"},
{custid:3145, custname:"rajan", accid:1303,acctype:"current",balance:50000,branchno:03, bankname:"abc"},
{custid:3147, custname:"ram", accid:1304,acctype:"saving",balance:45000,branchno:02, bankname:"ghz"}
])
1>
db.boaters.find({branchno:02},{branchname:1,_id:0).pretty()
2>
db.bank.aggregate(
[{
$group:{
_id:{custid : "$custid"},
numberofacc : {$sum : 1}
}
}
])

<5>

    
    
    




